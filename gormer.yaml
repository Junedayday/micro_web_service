# 数据库相关的信息
database:
  # 数据库连接
  dsn: "root:123456@tcp(127.0.0.1:3306)/demo"
  # 所有要生成到Go结构体中的表
  tables:
    # name-表名
    # goStruct-Go中结构体名
    # createTime-创建时间的数据库字段，必须为时间格式
    # updateTime-更新时间的数据库字段，必须为时间格式
    # softDeleteKey-软删除的数据库字段，必须为整数型，不填则为硬删除
    # softDeleteValue-表示为软删除的对应值
    - name: "orders"
      goStruct: "Order"
      createTime: "create_time"
      updateTime: "update_time"
      softDeleteKey: "delete_status"
      softDeleteValue: 1
      # genQueries会自动生成Query{method}+Count{method}两种方法
      # desc备注信息
      # fields查询的字段
      # where+args查询参数
      # orderBy排序方式
      genQueries:
        - method: "OrdersDesc"
          desc: "根据id逆序查询"
          orderBy: "id desc"
        - method: "OrdersByNamesAndCreateTime"
          desc: "根据名称和创建时间查询"
          fields: "id,name"
          where: "name in (?) and create_time > (?)"
          args:
            - name: "names"
              type: "[]string"
            - name: "createTime"
              type: "time.Time"
          orderBy: "id desc"
        - method: "OrdersByTimeRange"
          desc: "根据创建时间的范围查询"
          where: "create_time > (?) and create_time < (?)"
          args:
            - name: "startTime"
              type: "time.Time"
            - name: "endTime"
              type: "time.Time"

# 项目相关的信息
project:
  # 项目的路径
  base: "./"
  # gorm相关核心结构的代码路径
  gorm: "internal/gormer/"
  # dao层CRUD核心结构的代码路径
  dao: "internal/dao/"
  # model层的抽象代码
  model: "internal/model/"
  # 项目的go module信息
  go_mod: "github.com/Junedayday/micro_web_service"

  # Log 定制部分，一般用于自定义的log打印模式
  log:
    mode: false
    # log package
    package: "github.com/Junedayday/micro_web_service/internal/zlog"
