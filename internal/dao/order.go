// Code generated by gormer. DO NOT EDIT.
package dao

import (
	"github.com/pkg/errors"
	"gorm.io/gorm"

	"github.com/Junedayday/micro_web_service/internal/gormer"
)

type OrderRepo struct {
	db *gorm.DB
}

func NewOrderRepo(db *gorm.DB) *OrderRepo {
	return &OrderRepo{db: db}
}

func (repo *OrderRepo) AddOrder(order *gormer.Order) (err error) {
	err = repo.db.Create(order).Error
	return
}

func (repo *OrderRepo) QueryOrders(pageNumber, pageSize int, condition *gormer.OrderOptions) (orders []gormer.Order, err error) {
	db := repo.db
	if condition != nil {
		db = db.Where(condition.Order, condition.Fields)
	}
	err = db.
		Limit(pageSize).
		Offset((pageNumber - 1) * pageSize).
		Find(&orders).Error
	return
}

func (repo *OrderRepo) UpdateOrder(updated, condition *gormer.OrderOptions) (err error) {
	if updated == nil || len(updated.Fields) == 0 {
		return errors.New("update must choose certain fields")
	} else if condition == nil {
		return errors.New("update must include where condition")
	}

	err = repo.db.
		Model(&gormer.Order{}).
		Where(condition.Order, condition.Fields).
		Select(updated.Fields).
		Updates(updated.Order).
		Error
	return
}
